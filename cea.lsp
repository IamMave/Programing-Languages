;;This function encrypts each indivudual character,
;;takes in as paramter a symbol
(defun enChar (x)
(mod (+ (convert2num x) 5) 26))

;;This function decrypts each indivudual character,
;;takes in as paramter a symbol
(defun deChar (x)
(mod (- (convert2num x) 5) 26))

;;This function encrypts one indivudual character at
;;the time using recursion, takes in as paramter a list
(defun encrypt (phrase)
(cond ((null phrase) (print "Thank you"))
(t (print (convert2lett(enChar(car phrase))))))
(cond ((null phrase) (print "Bye"))
(t (encrypt (cdr phrase)))))

;;This function decrypts one indivudual character at
;;the time using recursion, takes in as paramter a list
(defun decrypt (phrase)
(cond ((null phrase) (print "Thank you"))
(t (print (convert2lett(deChar(car phrase))))))
(cond ((null phrase) (print "Bye"))
(t (decrypt (cdr phrase)))))

;;This function converts all the letters to numbers
(defun convert2num(atom)
(cond((eql atom 'a) 0)
    	((eql atom 'b) 1)
     	((eql atom 'c) 2)
     	((eql atom 'd) 3)
     	((eql atom 'e) 4)
     	((eql atom 'f) 5)
     	((eql atom 'g) 6)
	((eql atom 'h) 7)
	((eql atom 'i) 8)
	((eql atom 'j) 9)
	((eql atom 'k) 10)
	((eql atom 'l) 11)	
	((eql atom 'm) 12)
	((eql atom 'n) 13)
	((eql atom 'o) 14)
	((eql atom 'p) 15)
	((eql atom 'q) 16)
	((eql atom 'r) 17)
	((eql atom 's) 18)
	((eql atom 't) 19)
	((eql atom 'u) 20)
	((eql atom 'v) 21)
	((eql atom 'w) 22)
	((eql atom 'x) 23)
	((eql atom 'y) 24)
	((eql atom 'z) 25)
     (t 0)))

;;This function converts all the numbers back to letters
(defun convert2lett(atom)
(cond((eql atom '0) "a")
	((eql atom '1) "b")
        ((eql atom '2) "c")
        ((eql atom '3) "d")
        ((eql atom '4) "e")
        ((eql atom '5) "f")
        ((eql atom '6) "g")
        ((eql atom '7) "h")
        ((eql atom '8) "i")
        ((eql atom '9) "j")
        ((eql atom '10) "k")
        ((eql atom '11) "l")
        ((eql atom 'l2) "m")
        ((eql atom '13) "n")
        ((eql atom '14) "o")
        ((eql atom '15) "p")
        ((eql atom '16) "q")
        ((eql atom '17) "r")
        ((eql atom '18) "s")
        ((eql atom '19) "t")
	((eql atom '20) "u")
        ((eql atom '21) "v")
        ((eql atom '22) "w")
        ((eql atom '23) "x")
        ((eql atom '24) "y")
        ((eql atom '25) "z")
     (t 0)))
